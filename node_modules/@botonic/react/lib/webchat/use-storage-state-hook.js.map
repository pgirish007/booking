{"version":3,"sources":["../../src/webchat/use-storage-state-hook.js"],"names":["useStorageState","storage","storageKey","botonicLocalState","saveLocalState","botonicSessionState","saveSessionState","undefined","sessionStorage"],"mappings":";;;;;;;;;;;AAAA;;AAEO,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,UAAlC,EAA8C;AACnD,yBAA4C,sCAAgBA,UAAhB,CAA5C;AAAA;AAAA,MAAOC,iBAAP;AAAA,MAA0BC,cAA1B;;AACA,2BAAgD,wCAAkBF,UAAlB,CAAhD;AAAA;AAAA,MAAOG,mBAAP;AAAA,MAA4BC,gBAA5B;;AACA,MAAIL,OAAO,KAAK,IAAhB,EAAsB,OAAO,CAACM,SAAD,EAAYA,SAAZ,CAAP;AACtB,MAAIN,OAAO,KAAKO,cAAhB,EAAgC,OAAO,CAACH,mBAAD,EAAsBC,gBAAtB,CAAP;AAChC,SAAO,CAACH,iBAAD,EAAoBC,cAApB,CAAP;AACD","sourcesContent":["import { useLocalStorage, useSessionStorage } from 'react-use-storage'\n\nexport function useStorageState(storage, storageKey) {\n  const [botonicLocalState, saveLocalState] = useLocalStorage(storageKey)\n  const [botonicSessionState, saveSessionState] = useSessionStorage(storageKey)\n  if (storage === null) return [undefined, undefined]\n  if (storage === sessionStorage) return [botonicSessionState, saveSessionState]\n  return [botonicLocalState, saveLocalState]\n}\n"],"file":"use-storage-state-hook.js"}